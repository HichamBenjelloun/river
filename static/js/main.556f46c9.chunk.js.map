{"version":3,"sources":["core/constants/PayloadSources.js","core/dispatcher/Dispatcher.js","core/stores/Store.js","core/stores/GroupStore.js","todoapp/constants/TodoConstants.js","core/models/Model.js","core/models/fields/Field.js","core/models/fields/CharField.js","core/models/fields/BooleanField.js","todoapp/models/Todo.js","todoapp/actions/TodoActions.js","todoapp/sources/TodoSource.js","todoapp/stores/TodoStore.js","todoapp/components/Todos/TodoItem.js","todoapp/components/Todos/TodoList.js","todoapp/components/Todos/InputAddTodo.js","todoapp/components/Todos/Todos.js","serviceWorker.js","index.js"],"names":["keyMirror","SERVER_ACTION","VIEW_ACTION","action","this","dispatch","source","PayloadSources","Flux","Dispatcher","Store","_source","_emitter","EventEmitter","handle","_dispatchToken","register","bind","console","error","constructor","name","callback","on","CHANGE_EVENT","removeListener","emit","GroupStore","model","_model","_items","Map","_isLoading","setIsLoading","fetch","loading","item","set","getValue","id","get","items","addItem","delete","TODO_RECEIVE_DATA","TODO_CREATE","TODO_DESTROY","TODO_TOGGLE","Model","values","_values","_fields","setFields","field","fields","Object","keys","key","setField","value","hasErrors","errors","getErrors","Field","undefined","options","validators","_value","_options","TYPE","_validators","hasTypeError","REQUIRED","hasRequiredError","setValidators","length","optionName","hasError","push","CharField","setValidator","MAX_LENGTH","hasMaxLengthError","BooleanField","validator","isBoolean","Todo","required","max_length","data","handleServerAction","actionType","TodoConstants","text","handleViewAction","Date","now","done","TodoActions","Actions","_errors","payload","store","emitChange","create","destroy","toggle","setErrors","todo","clearErrors","removeItem","getItem","setValue","TodoSource","TodoItem","_onToggleClick","props","_onDestroyClick","textStyle","color","ListItem","dense","ListItemIcon","Delete","style","cursor","edge","onClick","Checkbox","checked","onChange","tabIndex","disableRipple","ListItemText","primary","React","Component","TodoList","todos","todoItems","Array","from","map","Divider","List","InputAddTodo","_handleChange","event","setState","target","_onCreateClick","state","_handleKeyPressed","keyCode","window","addEventListener","removeEventListener","TodoStore","JSON","stringify","display","height","TextField","ref","label","variant","helperText","flexGrow","alignSelf","Fab","aria-label","marginLeft","theme","createMuiTheme","palette","blueGrey","secondary","Todos","getAll","addChangeListener","_onChange","requestData","removeChangeListener","classes","ThemeProvider","position","top","left","width","flexDirection","justifyContent","alignItems","AppBar","Toolbar","Link","href","IconButton","className","menuButton","Typography","title","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.556f46c9.chunk.js","sourcesContent":["\nimport keyMirror from 'keymirror';\n\nexport default keyMirror({\n    SERVER_ACTION: null,\n    VIEW_ACTION: null\n});","\nimport Flux from 'flux';\n\nimport PayloadSources from '../constants/PayloadSources';\n\nclass Dispatcher extends Flux.Dispatcher {\n\n    handleServerAction(action) {\n        this.dispatch({\n            source: PayloadSources.SERVER_ACTION,\n            action: action\n        });\n    }\n\n    handleViewAction(action) {\n        this.dispatch({\n            source: PayloadSources.VIEW_ACTION,\n            action: action\n        });\n    }\n}\n\nexport default new Dispatcher();","\nimport EventEmitter from 'eventemitter3';\nimport Dispatcher from '../dispatcher/Dispatcher';\n\n\nclass Store {\n\n    static CHANGE_EVENT = 'change';\n\n    constructor(source) {\n        this._source = source;\n        this._emitter = new EventEmitter();\n\n        if(this.handle)\n            this._dispatchToken = Dispatcher.register(this.handle.bind(this));\n        else\n            console.error(\"(MethodNotImplemented) Class \" + this.constructor.name +\n                \"does not implement method `handle()` and can't handle actions.\");\n    }\n\n    get source() {\n        return this._source;\n    }\n\n    addChangeListener(callback) {\n        this._emitter.on(Store.CHANGE_EVENT, callback);\n    }\n\n    removeChangeListener(callback) {\n        this._emitter.removeListener(callback);\n    }\n\n    emitChange() {\n        this._emitter.emit(Store.CHANGE_EVENT);\n    }\n\n}\n\nexport default Store;","\nimport Store from './Store';\n\nclass GroupStore extends Store {\n\n    constructor(source, model) {\n        super(source);\n        this._model = model;\n        this._items = new Map();\n        this._isLoading = false;\n    }\n\n    requestData() {\n        this.setIsLoading(true);\n        this.source.fetch();\n    }\n\n    setIsLoading(loading) {\n        this._isLoading = loading;\n    }\n\n    isLoading() {\n        return this._isLoading;\n    }\n\n    addItem(item) {\n        this._items.set(item.getValue('id'), item);\n    }\n\n    getItem(id) {\n        return this._items.get(id);\n    }\n\n    store(items) {\n        for(let item of items) {\n            this.addItem(new this._model(item));\n        }\n    }\n\n    removeItem(id) {\n        this._items.delete(id);\n    }\n\n    getAll() {\n        return this._items;\n    }\n\n}\n\nexport default GroupStore;","\nimport keyMirror from 'keymirror';\n\n\nexport default keyMirror({\n    TODO_RECEIVE_DATA: null,\n    TODO_CREATE: null,\n    TODO_DESTROY: null,\n    TODO_TOGGLE: null\n});","\n\nclass Model {\n\n  constructor(values) {\n    this._values = values;\n    this._fields = {};\n    this.setFields();\n  }\n\n  get values() {\n    return this._values;\n  }\n\n  setField(name, field) {\n    this._fields[name] = field;\n  }\n\n  setFields() {\n    if(this.fields) {\n      let fields = this.fields();\n\n      for(let key of Object.keys(fields)) {\n        this.setField(key, fields[key]);\n      }\n    } else {\n      console.error(\"(MethodNotImplemented) Class \" + this.constructor.name +\n          \"should implement method `fields()`\");\n    }\n  }\n\n  setValue(name, value) {\n    this._values[name] = value;\n    this.setFields();\n  }\n\n  getValue(name) {\n    return this._values[name];\n  }\n\n  hasErrors() {\n    for(let key of Object.keys(this._fields)) {\n      if(this._fields[key].hasErrors()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getErrors() {\n    let errors = {};\n\n    for(let key of Object.keys(this._fields)) {\n      if(this._fields[key].hasErrors()) {\n        errors[key] = this._fields[key].getErrors();\n      }\n    }\n\n    return errors;\n  }\n\n}\n\nexport default Model;","\nclass Field {\n\n  static TYPE = 'type';\n  static REQUIRED = 'required';\n\n  constructor(value=undefined, options={}, validators={}) {\n    this._value = value;\n    this._options = options;\n    this._options[Field.TYPE] = this.constructor.name;\n\n    this._validators = validators;\n    this._validators[Field.TYPE] = this.hasTypeError.bind(this);\n    this._validators[Field.REQUIRED] = this.hasRequiredError.bind(this);\n\n    if (this.setValidators)\n      this.setValidators();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  setValidator(name, callback) {\n    this._validators[name] = callback.bind(this);\n  }\n\n  hasRequiredError() {\n    return this._options[Field.REQUIRED] ?\n    this.value === undefined || this.value.length === 0 : false;\n  }\n\n  hasError(optionName) {\n    if(!this.hasTypeError()) {\n      if (this._options[optionName])\n        return this._validators[optionName]();\n      else\n        return true;\n    } else {\n      return true;\n    }\n  }\n\n  hasErrors() {\n    for(let key of Object.keys(this._options)) {\n      if(this.hasError(key)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getErrors() {\n    let errors = [];\n\n    for(let key of Object.keys(this._options)) {\n      if(this._validators[key]()) {\n        errors.push(key);\n      }\n    }\n\n    return errors;\n  }\n\n}\n\nexport default Field;","\nimport Field from './Field.js';\n\nclass CharField extends Field {\n\n  static MAX_LENGTH = 'max_length';\n\n  setValidators() {\n    this.setValidator(CharField.MAX_LENGTH, this.hasMaxLengthError);\n  }\n\n  hasTypeError() {\n    return false;\n  }\n\n  hasMaxLengthError() {\n    return this.value.length > this.options[CharField.MAX_LENGTH];\n  }\n\n}\n\nexport default CharField;","\nimport validator from 'validator';\nimport Field from './Field.js';\n\nclass BooleanField extends Field {\n\n  hasTypeError() {\n    return !validator.isBoolean(this.value);\n  }\n\n}\n\nexport default BooleanField;","import Model from '../../core/models/Model';\nimport CharField from '../../core/models/fields/CharField';\nimport BooleanField from '../../core/models/fields/BooleanField';\n\nclass Todo extends Model {\n\n    fields() {\n        return {\n            'text': new CharField(this.values['text'], {required: true, max_length: 50}),\n            'done': new BooleanField(this.values['done'], {required: true})\n        }\n    }\n\n}\n\nexport default Todo;","\nimport Dispatcher from '../../core/dispatcher/Dispatcher'\nimport TodoConstants from '../constants/TodoConstants';\n\nexport default {\n\n    receiveData(data) {\n        Dispatcher.handleServerAction({\n            actionType: TodoConstants.TODO_RECEIVE_DATA,\n            data: data\n        })\n    },\n\n    create(text) {\n        Dispatcher.handleViewAction({\n            actionType: TodoConstants.TODO_CREATE,\n            text: text\n        });\n    },\n\n    destroy(id) {\n        Dispatcher.handleViewAction({\n            actionType: TodoConstants.TODO_DESTROY,\n            id: id\n        });\n    },\n\n    toggle(id) {\n        Dispatcher.handleViewAction({\n            actionType: TodoConstants.TODO_TOGGLE,\n            id: id\n        });\n    }\n\n};","\nimport Source from '../../core/sources/Source';\nimport TodoActions from '../actions/TodoActions';\n\nclass TodoSource extends Source {\n\n    data() {\n        return [\n            {\n                id: Date.now(),\n                text: 'Sample todo',\n                done: true\n            },\n            {\n                id: Date.now() + 1,\n                text: 'Another sample',\n                done: false\n            }\n        ];\n    }\n\n    action(data) {\n        TodoActions.receiveData(data);\n    }\n\n    fetch() {\n        this.action(this.data());\n    }\n\n}\n\nexport default new TodoSource();","\nimport GroupStore from '../../core/stores/GroupStore';\nimport TodoConstants from '../constants/TodoConstants';\nimport Todo from '../models/Todo';\n\nimport TodoSource from '../sources/TodoSource';\n\nlet Actions = TodoConstants;\n\nclass TodoStore extends GroupStore {\n\n    constructor(source) {\n        super(source, Todo);\n        this._errors = {};\n    }\n\n    handle(payload) {\n        let action = payload.action;\n\n        switch(action.actionType) {\n            case Actions.TODO_RECEIVE_DATA:\n                this.store(action.data);\n                this.setIsLoading(false);\n                this.emitChange();\n                break;\n            case Actions.TODO_CREATE:\n                this.create(action.text);\n                this.emitChange();\n                break;\n            case Actions.TODO_DESTROY:\n                this.destroy(action.id);\n                this.emitChange();\n                break;\n            case Actions.TODO_TOGGLE:\n                this.toggle(action.id);\n                this.emitChange();\n                break;\n            default:\n            // No-op.\n        }\n    }\n\n    getErrors() {\n        return this._errors;\n    }\n\n    setErrors(errors) {\n        this._errors = errors;\n    }\n\n    clearErrors() {\n        this.setErrors({});\n    }\n\n    create(text) {\n        let id = Date.now();\n        let todo = new Todo({\n            id: id,\n            text: text,\n            done: false\n        });\n\n        if(todo.hasErrors()) {\n            this.setErrors(todo.getErrors());\n        } else {\n            this.addItem(todo);\n            this.clearErrors();\n        }\n    }\n\n    destroy(id) {\n        this.removeItem(id);\n    }\n\n    toggle(id) {\n        let todo = this.getItem(id);\n        todo.setValue('done', !todo.getValue('done'));\n    }\n}\n\nexport default new TodoStore(TodoSource);","import React from 'react';\n\nimport TodoActions from '../../actions/TodoActions';\n\nimport {\n    Checkbox,\n    ListItem,\n} from '@material-ui/core';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {Delete} from \"@material-ui/icons\";\n\nclass TodoItem extends React.Component {\n\n    render() {\n        let props = this.props;\n\n        const done = props.todo.getValue('done');\n        const text = props.todo.getValue('text');\n\n        let textStyle = {};\n\n        if (done) {\n            textStyle = {\n                color: 'grey',\n            }\n        }\n\n        return (\n            <ListItem dense>\n                <ListItemIcon>\n                    <Delete\n                        style={{\n                            cursor: 'pointer',\n                        }}\n                        edge=\"start\"\n                        onClick={this._onDestroyClick}\n                    />\n                </ListItemIcon>\n                <ListItemIcon>\n                    <Checkbox\n                        edge=\"start\"\n                        checked={done}\n                        onChange={this._onToggleClick}\n                        tabIndex={-1}\n                        disableRipple\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={<span style={textStyle}>{text}</span>}\n                />\n            </ListItem>\n        );\n    }\n\n    _onToggleClick = () => {\n        TodoActions.toggle(this.props.todo.getValue('id'));\n    };\n\n    _onDestroyClick = () => {\n        TodoActions.destroy(this.props.todo.getValue('id'));\n    }\n}\n\nexport default TodoItem;","import React, {Fragment} from 'react';\n\nimport TodoItem from './TodoItem';\n\nimport {List} from '@material-ui/core';\nimport Divider from \"@material-ui/core/Divider\";\n\n\nconst TodoList = ({todos}) => {\n    const todoItems =\n        Array\n            .from(todos.keys())\n            .map(key => {\n                    return (\n                        <Fragment key={key}>\n                            <TodoItem todo={todos.get(key)}/>\n                            <Divider/>\n                        </Fragment>\n                    );\n                }\n            );\n\n    return <List>{todoItems}</List>\n};\n\nexport default TodoList;","import React from 'react';\n\nimport {\n    TextField,\n    Button,\n    Fab,\n} from '@material-ui/core';\n\nimport AddIcon from '@material-ui/icons/Add';\n\nimport TodoStore from '../../stores/TodoStore';\nimport TodoActions from '../../actions/TodoActions';\n\n\nclass InputAddTodo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ''\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"keydown\", this._handleKeyPressed, false);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"keydown\", this._handleKeyPressed);\n    }\n\n    render() {\n        let state = this.state;\n        let errors = TodoStore.getErrors();\n        errors = (Object.keys(errors).length === 0) ? null : JSON.stringify(errors);\n\n        const containerStyle = {\n            display: 'flex',\n            height: '90px',\n        };\n\n        return (\n            <div style={containerStyle}>\n                <TextField\n                    error={errors !== null}\n                    ref=\"input\"\n                    label=\"Add todo...\"\n                    variant=\"outlined\"\n                    value={state.value}\n                    onChange={this._handleChange}\n                    helperText={errors}\n                    style={{flexGrow: 1, alignSelf: 'flex-start',}}\n                />\n                <Fab\n                    color=\"primary\"\n                    aria-label=\"add\"\n                    style={{marginLeft: '10px'}}\n                    onClick={this._onCreateClick}\n                >\n                    <AddIcon/>\n                </Fab>\n            </div>\n        );\n    }\n\n    _handleChange = event => {\n        this.setState({\n            value: event.target.value\n        });\n    };\n\n    _onCreateClick = () => {\n        TodoActions.create(this.state.value);\n        this.setState({\n            value: ''\n        });\n    };\n\n    _handleKeyPressed = event => {\n        if (event.keyCode === 13) {\n            this._onCreateClick();\n        }\n    }\n}\n\nexport default InputAddTodo;","import React from 'react';\n\nimport TodoStore from '../../stores/TodoStore';\n\nimport TodoList from './TodoList';\nimport InputAddTodo from './InputAddTodo';\nimport {\n    createMuiTheme,\n    ThemeProvider,\n    AppBar,\n} from \"@material-ui/core\";\n\nimport {blueGrey} from \"@material-ui/core/colors\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Link from \"@material-ui/core/Link\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blueGrey,\n        secondary: blueGrey,\n    }\n});\n\nclass Todos extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: TodoStore.getAll()\n        };\n    }\n\n    componentDidMount() {\n        TodoStore.addChangeListener(this._onChange.bind(this));\n        TodoStore.requestData();\n    }\n\n    componentWillUnmount() {\n        TodoStore.removeChangeListener(this._onChange.bind(this));\n    }\n\n    render() {\n        const classes = {};\n\n        let state = this.state;\n\n        let containerStyle = {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n        };\n\n        let contentStyle = {\n            position: 'relative',\n            top: '100px',\n            width: '90%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n        };\n\n        return (\n            <ThemeProvider theme={theme}>\n                <div style={containerStyle}>\n                    <AppBar position=\"static\">\n                        <Toolbar>\n                            <Link\n                                color='inherit'\n                                href=\"https://github.com/HichamBenjelloun/river\"\n                            >\n                                <IconButton\n                                    edge=\"start\"\n                                    className={classes.menuButton}\n                                    color=\"inherit\"\n                                    aria-label=\"github\"\n                                >\n                                    <GitHubIcon/>\n                                </IconButton>\n                            </Link>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                Todo list demo\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <div style={contentStyle}>\n                        <InputAddTodo/>\n                        <TodoList todos={state.todos}/>\n                    </div>\n                </div>\n            </ThemeProvider>\n        );\n    }\n\n    _onChange() {\n        this.setState({\n            todos: TodoStore.getAll()\n        });\n    }\n\n}\n\nexport default Todos;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Todos from './todoapp/components/Todos/Todos';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Todos />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}